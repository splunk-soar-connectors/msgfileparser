{
    "appid": "e0b31412-4545-43eb-ad86-b1e466b38e7f",
    "name": "MSG File Parser",
    "description": "This app parses an outlook .msg file and extracts IOCs into Container and Artifacts",
    "type": "email",
    "product_vendor": "Phantom",
    "logo": "logo_msgfileparser.svg",
    "logo_dark": "logo_msgfileparser_dark.svg",
    "product_name": "MSG File Parser",
    "product_version_regex": ".*",
    "publisher": "Splunk",
    "license": "Copyright (c) 2019-2020 Splunk Inc.",
    "app_version": "TBD",
    "utctime_updated": "2019-11-19T20:21:31.000000Z",
    "package_name": "phantom_msgfileparser",
    "main_module": "msgfileparser_connector.pyc",
    "min_phantom_version": "4.0.1068",
    "app_wizard_version": "1.0.0",
    "configuration": {},
    "pip_dependencies": {
        "wheel": [
            {
                "module": "olefile",
                "input_file": "wheels/olefile-0.45.1-py2.py3-none-any.whl"
            },
            {
                "module": "tzlocal",
                "input_file": "wheels/tzlocal-2.0.0-py2.py3-none-any.whl"
            },
            {
                "module": "ExtractMsg",
                "input_file": "extract_msg/ExtractMsg-0.3-py2-none-any.whl"
            },
            {
                "module": "IMAPClient",
                "input_file": "wheels/IMAPClient-2.0.0-py2.py3-none-any.whl"
            }
        ]
    },
    "actions": [
        {
            "action": "extract email",
            "identifier": "extract_email",
            "type": "generic",
            "description": "Extract email data from Outlook MSG files",
            "verbose": "This action requires the input vault file to be an Outlook MSG file. This action creates artifacts for the email data (from, to, cc, date, subject, body) and the email's attachment(s)",
            "read_only": false,
            "lock": {
                "enabled": false
            },
            "parameters": {
                "artifact_name": {
                    "description": "Name of artifact, default (Email Artifact)",
                    "data_type": "string",
                    "default": "Email Artifact",
                    "required": true,
                    "primary": false,
                    "order": 3
                },
                "container_id": {
                    "required": false,
                    "description": "Add created artifacts to this container",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ],
                    "primary": true,
                    "order": 1
                },
                "vault_id": {
                    "required": true,
                    "description": "Vault ID of the .msg file",
                    "data_type": "string",
                    "contains": [
                        "vault id",
                        "sha1"
                    ],
                    "primary": true,
                    "order": 0
                },
                "label": {
                    "required": false,
                    "description": "Creates a new Container with this label to add created artifacts",
                    "data_type": "string",
                    "contains": [
                        "phantom container label"
                    ],
                    "primary": true,
                    "order": 2
                },
                "severity": {
                    "required": false,
                    "description": "Severity applied to the artifact(s) extracted from the .msg file",
                    "data_type": "string",
                    "default": "medium",
                    "order": 3
                },
                "run_automation": {
                    "required": false,
                    "description": "If true, active playbooks will be triggered when artifacts are created",
                    "data_type": "boolean",
                    "default": true,
                    "order": 4
                }
            },
            "output": [
                {
                    "column_order": 4,
                    "data_path": "action_result.status",
                    "example_values": [
                        "success"
                    ],
                    "data_type": "string",
                    "column_name": "status"
                },
                {
                    "data_path": "action_result.parameter.artifact_name",
                    "data_type": "string",
                    "example_values": [
                        "Email Artifact"
                    ]
                },
                {
                    "contains": [
                        "phantom container id"
                    ],
                    "data_path": "action_result.parameter.container_id",
                    "data_type": "numeric",
                    "example_values": [
                        193
                    ]
                },
                {
                    "data_path": "action_result.parameter.label",
                    "data_type": "string",
                    "contains": [
                        "phantom container label"
                    ],
                    "example_values": [
                        "events",
                        "email"
                    ],
                    "column_order": 3,
                    "column_name": "label"
                },
                {
                    "data_path": "action_result.parameter.vault_id",
                    "data_type": "string",
                    "contains": [
                        "vault id",
                        "sha1"
                    ],
                    "example_values": [
                        "492cafe7223b63c03413a290b8b7cefdfbc9e5d2",
                        "f1cba62002865cdcee8ce010abb87510c32c48ca"
                    ],
                    "column_order": 2,
                    "column_name": "vault_id"
                },
                {
                    "data_path": "action_result.data",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary",
                    "data_type": "string"
                },
                {
                    "data_path": "action_result.summary.artifacts_found",
                    "example_values": [
                        2,
                        8
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.summary.container_id",
                    "data_type": "numeric",
                    "contains": [
                        "phantom container id"
                    ],
                    "example_values": [
                        256,
                        193
                    ],
                    "column_order": 1,
                    "column_name": "container_id"
                },
                {
                    "data_path": "action_result.message",
                    "example_values": [
                        "Container id: 256, Artifacts found: 2",
                        "Container id: 193, Artifacts found: 8"
                    ],
                    "data_type": "string"
                },
                {
                    "data_path": "summary.total_objects",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "summary.total_objects_successful",
                    "example_values": [
                        1
                    ],
                    "data_type": "numeric"
                },
                {
                    "data_path": "action_result.parameter.severity",
                    "data_type": "string",
                    "example_values": [
                        "low",
                        "medium"
                    ]
                },
                {
                    "data_path": "action_result.parameter.run_automation",
                    "data_type": "boolean",
                    "example_values": [
                        true,
                        false
                    ]
                }
            ],
            "render": {
                "type": "table"
            },
            "versions": "EQ(*)"
        }
    ]
}
